{"version":3,"sources":["utils/statuses.js","utils/priorities.js","utils/initialState.js","store/reducer.js","store/index.js","store/actions.js","components/EditTaskForm.js","components/DeleteTaskModal.js","components/Task.js","components/StatusColumn.js","components/Board.js","components/AddTaskForm.js","components/App.js","index.js"],"names":["statuses","priorities","initialState","id","uuid","title","description","status","priority","index","deleteTask","tasks","filter","task","editTask","editedTask","map","createTask","payload","newTasks","length","push","reorderTasks","draggableId","source","destination","droppableId","el","store","createStore","state","action","type","mapDispatchToProps","connect","props","isEditTaskMode","setEditTaskMode","useState","taskTitle","setTaskTitle","taskDescription","setTaskDescription","taskPriority","setTaskPriority","isSaveDisabled","trim","onHide","Modal","show","centered","className","htmlFor","value","onChange","e","target","placeholder","defaultValue","key","onClick","disabled","isDeleteTaskMode","setDeleteTaskMode","Task","getTitleClassName","titleClassName","onEditTaskClick","onDeleteTaskClick","provided","draggableProps","dragHandleProps","ref","innerRef","filteredTasks","sort","a","b","onDragEnd","result","snapshot","style","isDraggingOver","backgroundColor","isCreateTaskMode","setCreateTaskMode","isSaveBtnDisabled","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abd3329f.chunk.js","sourcesContent":["export const statuses = ['To Do', 'In Progress', 'Review', 'Done'];","export const priorities = ['High', 'Medium', 'Low'];","import {v4 as uuid} from \"uuid\";\nimport {statuses} from \"./statuses\";\nimport {priorities} from \"./priorities\";\n\nexport const initialState = [\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[0],\n        priority: priorities[0],\n        index: 0\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[1],\n        priority: priorities[1],\n        index: 0\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[2],\n        priority: priorities[2],\n        index: 0\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[3],\n        priority: priorities[0],\n        index: 0\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[0],\n        priority: priorities[1],\n        index: 1\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[1],\n        priority: priorities[1],\n        index: 1\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[2],\n        priority: priorities[2],\n        index: 1\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[3],\n        priority: priorities[0],\n        index: 1\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[0],\n        priority: priorities[1],\n        index: 2\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[1],\n        priority: priorities[1],\n        index: 2\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[2],\n        priority: priorities[2],\n        index: 2\n    },\n    {\n        id: uuid(),\n        title: 'Lorem Ipsum',\n        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n        status: statuses[3],\n        priority: priorities[0],\n        index: 2\n    }\n];","import {CREATE_TASK, EDIT_TASK, GET_ALL_TASKS, REORDER_TASKS, DELETE_TASK} from './actions';\nimport {initialState} from \"../utils/initialState\";\nimport {v4 as uuid} from \"uuid\";\nimport {statuses} from \"../utils/statuses\";\n\nexport const taskReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ALL_TASKS:\n            return state;\n        case REORDER_TASKS:\n            return reorderTasks(action.payload, state);\n        case CREATE_TASK:\n            return createTask(action.payload, state);\n        case EDIT_TASK:\n            return editTask(action.payload, state);\n        case DELETE_TASK:\n            return deleteTask(action.payload, state);\n        default:\n            return state;\n    }\n};\n\nconst deleteTask = (id, tasks) => {\n    return tasks.filter(task => task.id !== id);\n}\n\nconst editTask = (editedTask, tasks) => {\n    return tasks.map(task => {\n        if (task.id === editedTask.id) {\n            task = {...task, ...editedTask};\n        }\n        return task;\n    });\n};\n\nconst createTask = (payload, tasks) => {\n    const {title, description, priority} = payload;\n    const newTasks = [...tasks];\n    const index = tasks.filter(task => task.status === statuses[0]).length;\n    newTasks.push({\n        id: uuid(),\n        title,\n        description,\n        status: statuses[0],\n        priority,\n        index\n    });\n\n    return newTasks;\n};\n\n\nconst reorderTasks = (payload, tasks) => {\n    const {draggableId, source, destination} = payload;\n    if (source.droppableId === destination.droppableId) {\n        const newTasks = [...tasks];\n\n        if (destination.index < source.index) {\n            newTasks.map(el => {\n                if (el.status === source.droppableId && el.index >= destination.index && el.index < source.index) {\n                    el.index = el.index + 1\n                }\n                return el;\n            });\n        } else {\n            newTasks.map((el) => {\n                if (el.status === source.droppableId && el.index <= destination.index && el.index > source.index) {\n                    el.index = el.index - 1\n                }\n                return el;\n            });\n        }\n\n        newTasks.map((el) => {\n            if (el.status === source.droppableId && el.id === draggableId) {\n                el.index = destination.index;\n            }\n            return el;\n        });\n        return newTasks;\n    } else {\n\n        const newTasks = tasks.map((el) => {\n            if (el.status === source.droppableId && el.index > source.index) {\n                el.index = el.index - 1;\n            } else if (el.status === destination.droppableId && el.index >= destination.index) {\n                el.index = el.index + 1;\n            }\n            return el;\n        });\n\n        newTasks.map(el => {\n            if (el.id === draggableId) {\n                el.status = destination.droppableId;\n                el.index = destination.index;\n            }\n            return el;\n        });\n        return newTasks;\n\n    }\n}\n","import {createStore} from \"redux\";\nimport {taskReducer} from './reducer';\n\nexport const store = createStore(taskReducer);","export const CREATE_TASK = 'CREATE_TASK';\nexport const GET_ALL_TASKS = 'GET_ALL_TASKS';\nexport const REORDER_TASKS = 'REORDER_TASKS';\nexport const EDIT_TASK = 'EDIT_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n\nexport const reorderTasks = (draggableId, source, destination) => {\n    return {\n        type: REORDER_TASKS,\n        payload: {draggableId, source, destination}\n    }\n};\n\nexport const createTask = (title, description, priority) => {\n    return {\n        type: CREATE_TASK,\n        payload: {title, description, priority}\n    }\n};\n\nexport const editTask = (id, title, description, priority) => {\n    return {\n        type: EDIT_TASK,\n        payload: {id, title, description, priority}\n    }\n};\n\nexport const deleteTask = (id) => {\n    return {\n        type: DELETE_TASK,\n        payload: id\n    }\n};","import React, {useState} from \"react\";\nimport {connect} from 'react-redux';\nimport {editTask} from \"../store/actions\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {priorities} from \"../utils/priorities\";\n\nconst EditTaskForm = (props) => {\n\n    const {isEditTaskMode, setEditTaskMode, task, editTask} = props;\n    const {id, title, description, priority} = task;\n    const [taskTitle, setTaskTitle] = useState(title);\n    const [taskDescription, setTaskDescription] = useState(description);\n    const [taskPriority, setTaskPriority] = useState(priority);\n\n    const onTitleChange = (e) => {\n        setTaskTitle(e.target.value);\n    }\n\n    const onDescriptionChange = (e) => {\n        setTaskDescription(e.target.value);\n    }\n\n    const onPriorityChange = (e) => {\n        setTaskPriority(e.target.value);\n    }\n\n    const onSaveClick = () => {\n        editTask(id, taskTitle, taskDescription, taskPriority);\n        setTaskTitle(taskTitle);\n        setTaskDescription(taskDescription);\n        setTaskPriority(taskPriority);\n        setEditTaskMode(false);\n    }\n    const isSaveDisabled = taskTitle.trim() === '' || taskDescription.trim() === '';\n\n    const onHide = () => {\n        setTaskTitle(title);\n        setTaskDescription(description);\n        setTaskPriority(priority);\n        setEditTaskMode(false);\n    }\n\n    return (\n        <Modal show={isEditTaskMode} onHide={onHide} centered>\n            <div className=\"p-3\">\n                <h4>Edit Task</h4>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input className=\"form-control\" id=\"title\" value={taskTitle} onChange={onTitleChange}\n                           placeholder=\"Enter Task Title...\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description</label>\n                    <textarea className=\"form-control min-h-100\" id=\"description\" defaultValue={taskDescription}\n                              onChange={onDescriptionChange} placeholder=\"Enter Task Description...\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"priority\">Priority</label>\n                    <select id=\"priority\" className=\"form-control\" value={taskPriority} onChange={onPriorityChange}>\n                        {\n                            priorities.map((priority) => {\n                                return <option key={priority} value={priority}>{priority}</option>;\n                            })\n                        }\n                    </select>\n                </div>\n                <button onClick={onHide} className=\"btn btn-secondary float-right ml-2\">Cancel</button>\n                <button onClick={onSaveClick} className=\"btn btn-primary float-right\" disabled={isSaveDisabled}>Save\n                </button>\n            </div>\n        </Modal>\n    );\n};\n\nconst mapDispatchToProps = {editTask};\n\nexport default connect(null, mapDispatchToProps)(EditTaskForm);","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {connect} from 'react-redux';\nimport {deleteTask} from \"../store/actions\";\n\nconst DeleteTaskModal = (props) => {\n\n    const {isDeleteTaskMode, setDeleteTaskMode, task, deleteTask} = props;\n    const {id, title} = task;\n\n    const onHide = () => {\n        setDeleteTaskMode(false);\n    }\n\n    const onDeleteClick = () => {\n        deleteTask(id);\n        onHide();\n    }\n\n    return (\n        <Modal show={isDeleteTaskMode} onHide={onHide} centered>\n            <div className=\"p-3\">\n                <h4>Delete Task</h4>\n                <p>Are you sure you want to delete this task: '{title}'?</p>\n                <button onClick={onHide} className=\"btn btn-secondary float-right ml-2\">Cancel</button>\n                <button onClick={onDeleteClick} className=\"btn btn-primary float-right\">Delete</button>\n            </div>\n        </Modal>\n    );\n};\n\nconst mapDispatchToProps = {deleteTask};\n\nexport default connect(null, mapDispatchToProps)(DeleteTaskModal);","import React, {useState} from \"react\";\nimport {Draggable} from \"react-beautiful-dnd\";\nimport {priorities} from \"../utils/priorities\";\nimport EditTaskForm from \"./EditTaskForm\";\nimport DeleteTaskModal from \"./DeleteTaskModal\";\n\nconst Task = (props) => {\n\n    const {task} = props;\n    const {id, title, description, priority, index} = task;\n    const [isEditTaskMode, setEditTaskMode] = useState(false);\n    const [isDeleteTaskMode, setDeleteTaskMode] = useState(false);\n\n    const getTitleClassName = () => {\n        let titleClassName = 'rounded-sm text-white text-center m-0 p-1 ';\n        switch (priority) {\n            case priorities[0]:\n                titleClassName += 'bg-danger';\n                break;\n            case priorities[1]:\n                titleClassName += 'bg-warning';\n                break;\n            case priorities[2]:\n                titleClassName += 'bg-success';\n                break;\n            default:\n                return titleClassName;\n        }\n        return titleClassName;\n    }\n\n    const onEditTaskClick = () => {\n        setEditTaskMode(true);\n    }\n\n    const onDeleteTaskClick = () => {\n        setDeleteTaskMode(true);\n    }\n\n    return (\n        <>\n            <EditTaskForm isEditTaskMode={isEditTaskMode} setEditTaskMode={setEditTaskMode} task={task}/>\n            <DeleteTaskModal isDeleteTaskMode={isDeleteTaskMode} setDeleteTaskMode={setDeleteTaskMode} task={task}/>\n            <Draggable draggableId={id} index={index}>\n                {\n                    provided => {\n                        return (\n                            <div {...provided.draggableProps}\n                                 {...provided.dragHandleProps}\n                                 ref={provided.innerRef}\n                                 className=\"shadow rounded-sm task\">\n                                <div className={getTitleClassName()}>{title}</div>\n                                <div className=\"text-left p-2\">{description}</div>\n                                <div className=\"text-secondary p-2 row\">\n                                    <div className=\"col-7 text-left\">Priority: {priority}</div>\n                                    <div className=\"col-5 text-right\">\n                                        <i className=\"fa fa-pencil rounded-sm icon\" onClick={onEditTaskClick}/>\n                                        <i className=\"fa fa-trash rounded-sm icon\" onClick={onDeleteTaskClick}/>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    }\n                }\n            </Draggable>\n        </>\n    );\n};\n\nexport default Task;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Task from \"./Task\";\n\nconst StatusColumn = (props) => {\n\n    const {tasks, status} = props;\n\n    const filteredTasks = () => tasks.filter(task => task.status === status);\n\n    return (\n        <>\n            <div className=\"font-weight-bold text-secondary mb-2\">{status} ({filteredTasks().length} of {tasks.length})</div>\n            {\n                filteredTasks().sort((a, b) => a.index - b.index)\n                    .map((task) => {\n                        return (\n                            <Task key={task.id} task={task}/>\n                        );\n                    })\n            }\n        </>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {tasks: state};\n}\n\nexport default connect(mapStateToProps)(StatusColumn);","import React from \"react\";\nimport {connect} from 'react-redux';\nimport {reorderTasks} from \"../store/actions\";\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\nimport {statuses} from \"../utils/statuses\";\nimport StatusColumn from \"./StatusColumn\";\n\nconst Board = (props) => {\n\n    const onDragEnd = result => {\n        const {draggableId, source, destination} = result;\n\n        if (destination) {\n            props.reorderTasks(draggableId, source, destination);\n        }\n    };\n\n    const onDraggingOver = (isDraggingOver) => ({\n        backgroundColor: isDraggingOver ? '#bee1ff' : '#fff'\n    });\n\n    return (\n        <div className=\"board\">\n            <DragDropContext onDragEnd={onDragEnd}>\n                {\n                    statuses.map(status => {\n                        return (\n                            <Droppable droppableId={status} key={status}>\n                                {\n                                    (provided, snapshot) => {\n                                        return (\n                                            <div ref={provided.innerRef} className=\"status-col\" style={onDraggingOver(snapshot.isDraggingOver)}>\n                                                <StatusColumn status={status}/>\n                                                {provided.placeholder}\n                                            </div>\n                                        );\n                                    }\n                                }\n                            </Droppable>\n                        );\n                    })\n                }\n            </DragDropContext>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = {reorderTasks};\n\nexport default connect(null, mapDispatchToProps)(Board);","import React, {useState} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {priorities} from \"../utils/priorities\";\nimport {connect} from 'react-redux';\nimport {createTask} from \"../store/actions\";\n\nconst AddTaskForm = (props) => {\n\n    const {isCreateTaskMode, setCreateTaskMode, createTask} = props;\n    const [taskTitle, setTaskTitle] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskPriority, setTaskPriority] = useState(priorities[priorities.length - 1]);\n\n    const onTitleChange = (e) => {\n        setTaskTitle(e.target.value);\n    }\n\n    const onDescriptionChange = (e) => {\n        setTaskDescription(e.target.value);\n    }\n\n    const onPriorityChange = (e) => {\n        setTaskPriority(e.target.value);\n    }\n\n    const onHide = () => {\n        setTaskTitle('');\n        setTaskDescription('');\n        setTaskPriority(priorities[priorities.length - 1]);\n        setCreateTaskMode(false);\n    }\n\n    const onCreate = () => {\n        createTask(taskTitle, taskDescription, taskPriority);\n        onHide();\n    }\n\n    const isSaveBtnDisabled = taskTitle.trim() === '' || taskDescription.trim() === '';\n\n    return (\n        <Modal show={isCreateTaskMode} onHide={onHide} centered>\n            <div className=\"p-3\">\n                <h4>Create Task</h4>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input className=\"form-control\" id=\"title\" value={taskTitle} onChange={onTitleChange}\n                           placeholder=\"Enter Task Title...\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description</label>\n                    <textarea className=\"form-control min-h-100\" id=\"description\" defaultValue={taskDescription}\n                              onChange={onDescriptionChange} placeholder=\"Enter Task Description...\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"priority\">Priority</label>\n                    <select id=\"priority\" className=\"form-control\" value={taskPriority} onChange={onPriorityChange}>\n                        {\n                            priorities.map((priority) => {\n                                return <option key={priority} value={priority}>{priority}</option>;\n                            })\n                        }\n                    </select>\n                </div>\n                <button onClick={onHide} className=\"btn btn-secondary float-right ml-2\">Cancel</button>\n                <button onClick={onCreate} className=\"btn btn-primary float-right\" disabled={isSaveBtnDisabled}>Save</button>\n            </div>\n        </Modal>\n    );\n};\n\nconst mapDispatchToProps = {createTask};\n\nexport default connect(null, mapDispatchToProps)(AddTaskForm);","import React, {useState} from 'react';\nimport Board from \"./Board\";\nimport AddTaskForm from \"./AddTaskForm\";\n\nconst App = () => {\n\n    const [isCreateTaskMode, setCreateTaskMode] = useState(false);\n\n    const onClickCreateTask = () => {\n        setCreateTaskMode(true);\n    };\n\n    return (\n        <div className=\"text-center mt-5\">\n            <AddTaskForm isCreateTaskMode={isCreateTaskMode} setCreateTaskMode={setCreateTaskMode}/>\n            <Board/>\n            <button className=\"btn btn-light m-3\" onClick={onClickCreateTask}>Create Task</button>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}